{"ast":null,"code":"import axios from 'axios';\nexport async function UserRegister(url, data) {\n  try {\n    const response = await axios.post(url, data);\n    return response;\n  } catch (error) {\n    if (error.response) {\n      return error.response.data;\n    } else {\n      throw error;\n    }\n  }\n}\n_c = UserRegister;\nexport async function login(url, data) {\n  try {\n    const response = await axios.post(url, data);\n    return response;\n  } catch (error) {\n    if (error) {\n      return error.res;\n    } else {\n      throw error;\n    }\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"UserRegister\");","map":{"version":3,"names":["axios","UserRegister","url","data","response","post","error","_c","login","res","$RefreshReg$"],"sources":["D:/Abraham/task/src/Controller/UserController.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\n\nexport async function UserRegister(url: string, data: any): Promise<AxiosResponse<any>> {\n    try {\n        const response = await axios.post(url, data);\n        return response;\n    } catch (error) {\n        if (error.response) {\n            return error.response.data;\n        } else {\n            throw error;\n        }\n    }\n}\n\nexport async function login(url: string, data: any): Promise<AxiosResponse<any>> {\n    try {\n        const response = await axios.post(url, data);\n        return response;\n    } catch (error) {\n        if (error) {\n            return error.res;\n        } else {\n            throw error;\n        }\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAyB,OAAO;AAE5C,OAAO,eAAeC,YAAYA,CAACC,GAAW,EAAEC,IAAS,EAA+B;EACpF,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACH,GAAG,EAAEC,IAAI,CAAC;IAC5C,OAAOC,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACF,QAAQ,EAAE;MAChB,OAAOE,KAAK,CAACF,QAAQ,CAACD,IAAI;IAC9B,CAAC,MAAM;MACH,MAAMG,KAAK;IACf;EACJ;AACJ;AAACC,EAAA,GAXqBN,YAAY;AAalC,OAAO,eAAeO,KAAKA,CAACN,GAAW,EAAEC,IAAS,EAA+B;EAC7E,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACH,GAAG,EAAEC,IAAI,CAAC;IAC5C,OAAOC,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,IAAIA,KAAK,EAAE;MACP,OAAOA,KAAK,CAACG,GAAG;IACpB,CAAC,MAAM;MACH,MAAMH,KAAK;IACf;EACJ;AACJ;AAAC,IAAAC,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}